b1018194 Ito Hajime [Git説明資料]

*Example*

#gitファイルを作成
　git init

#リモートリポジトリを追加
　git remote add [remote_name] [remote_URL]

#リモートのマスターブランチとローカルのマスターブランチを最新の状態に統合
　git pull [remote_name] master

#ローカルブランチを作成
　git checkout -b [local_branch]

#ローカルブランチに移動
　git checkout [local_branch]

#リモートのマスターブランチをローカルの自分のブランチに統合
  git pull [remote_name] [remote_master_branch]

#すべてのファイルをインデックスに追加
　git add .

＃インデックスをローカルブランチのリポジトリに更新
　git commit 

＃ローカルブランチの更新をリモートリポジトリに更新
　git push [remote_name] [remote_branch]

＃マスターブランチに移動
　git checkout master

＃ローカルブランチをローカルのマスターブランチにマージ
　git merge [local_branch]

＃マージしたローカルのマスターブランチの更新をリモートのマスターブランチに更新
　git push [remote_name] master


＊流れ＊

ーーーーーーーーーーーーーーーー[ローカル]ーーーーーーーーーーーーーーーーーーーーーー
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
[ワークツリー]   →   [インデックス]   →  [リポジトリ]
ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
　　　　　     (add)                (commit)
作業してる場所　
　　　　　　　　コミットの準備する場所
　　　　　　　　　　　　　　　　　　　　ファイルやディレクトリを管理する場所

ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
　　　　　　　　　　　　　　　　　
　　　　　　　　　　　 　(pull)↑          　　　↓(push)

　　　　　　　　　　　　　　[リモートリポジトリ(Github)]

＃ローカル環境を常に更新しよう


＊変更履歴（歴史）＊

Gitは変更履歴も保存される。変更履歴が保存されるから、履歴をたどってデータを復元できるんだね。

だからGitでは履歴を意識する必要がある。

皆の履歴をGithubで統合しなくちゃいけないからね。

皆の履歴が合わなくなるとコンフリクトを起こしてGitが注意してくれるよ。


＊コンフリクト⚠＊

マスターのXファイルに関する履歴

　[１を変更　→　2を変更　→　3を変更　]

AさんのXファイルに関する履歴

　pullをして

　[１を変更　→　2を変更　→　3を変更　]

　add, commitしてマスターにマージしてpush

　[１を変更　→　2を変更　→　3を変更　]→　7を変更

BさんのXファイルに関する履歴も同様にして、

　add, commitしてマスターにマージしてpush

　[１を変更　→　2を変更　→　3を変更　]→　9を変更



Aさんのほうが1秒差早くpushした場合、

7と9の変更が互いに影響がなければ、Bさんは統合（マージ）されておわり。

互いに影響のある変更であれば（同じ行の変更をしてしまった場合）、

Bさんにはコンフリクト！


[１を変更　→　2を変更　→　3を変更　]→　7を変更


こっちと


[１を変更　→　2を変更　→　3を変更　]→　9を変更

こっち

どっちが正しいの？

そう聞かれるのがコンフリクト。

どちらかの履歴を削除しないといけないね。